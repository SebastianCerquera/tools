(ido-mode t)

(require 'iso-transl)

(setq skeleton-pair t)
(global-set-key "[" 'skeleton-pair-insert-maybe)
(global-set-key "(" 'skeleton-pair-insert-maybe)
(global-set-key "{" 'skeleton-pair-insert-maybe)
(global-set-key "'" 'skeleton-pair-insert-maybe)
(global-set-key "\"" 'skeleton-pair-insert-maybe)


(setq-default indent-tabs-mode nil)

(setq-default standard-indent 2)

(global-set-key (kbd "C-x c") 'comment-or-uncomment-region)
(global-set-key (kbd "C-{") 'right-char)
(global-set-key (kbd "C-Ã±") 'left-char)
(global-set-key (kbd "C-c DEL") 'org-mark-ring-goto)


(global-hl-line-mode 1)

(defun high-bright-look-and-feel ()
  (interactive)
  (set-background-color "black")
  (set-foreground-color "orange")
  (set-face-background 'hl-line "gray30"))

(defun remote-look-and-feel ()
  (interactive)
  (set-background-color "black")
  (set-foreground-color "white")
  (set-face-background 'hl-line "white"))

(defun local-look-and-feel ()
  (interactive)
  (set-background-color "grey")
  (set-foreground-color "black")
  (set-face-background 'hl-line "gray60")
  (set-cursor-color "gray30"))

(local-look-and-feel)

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(region ((((class color) (min-colors 88) (background dark)) (:background "grey15")))))

(show-paren-mode t)
(put 'narrow-to-region 'disabled nil)

(put 'scroll-left 'disabled nil)

;; En ocasiones emcas no copia al clipboard de X.
(setq x-select-enable-clipboard t)

(require 'uniquify)
(setq uniquify-buffer-name-style 'forward)

(require 'package)
; add MELPA to repository list
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "http://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))

(package-initialize)


;; (require 'auto-complete)
;; ; do default config for auto-complete
;; (require 'auto-complete-config)
;; (ac-config-default)


;; ORG
(setq org-log-done 'time)

(setq org-clock-idle-time 15)

;; (setq org-clock-continuously t)

;; it breaks, i think that this has to be called within a org hook.
;; (define-key org-mode-map (kbd "C-c C-x C-i") 'org-clock-in-last)

(setq org-clock-persist 'history)
(org-clock-persistence-insinuate)

(setq org-use-tag-inheritance nil)


(require 'org-crypt)
;; (org-crypt-use-before-save-magic)
;; GPG key to use for encryption
;; Either the Key ID or set to nil to use symmetric encryption.
(setq org-crypt-key nil)



;; Java
;;(require 'eclim)
;;(global-eclim-mode)

;;(require 'eclimd)

;;(custom-set-variables
;;  '(eclim-eclipse-dirs '("/opt/eclipse"))
;;  '(eclim-executable "/opt/eclipse/eclim"))

;;(setq help-at-pt-display-when-idle t)
;;(setq help-at-pt-timer-delay 0.1)
;;(help-at-pt-set-timer)


;;(require 'ac-emacs-eclim-source)
;;(ac-emacs-eclim-config)


(defun single-line ()
    "turns buffer into a single line"
    (interactive)
    (shell-command-on-region (buffer-end -1) (buffer-end 1) "perl ~/.emacs.d/single-line.pl" (current-buffer) "*single-line-errors*"))

(defun xmllint ()
    "format current
 buffers xml"
    (interactive)
    (shell-command-on-region (buffer-end -1) (buffer-end 1) "xmllint --format -" (current-buffer) "*xmllint-errors*"))

(defun enclose-string ()
    "enclose string in quotes"
    (interactive)
    (shell-command-on-region (region-beginning) (region-end) "perl -ne 'chomp(); print \"\\\"$_\\\"\"; if(not eof()){print \"\n\"}'" (current-buffer) "*perl-errors*"))


;; This works but i cannot copy the command from the same buffer that i am working in.
;; cua-mode does interfier with the switching buffer command, so i got to turn cua-mode off
;; to be able to copy the command from another buffer.
(defun shell-command-on-region-replace (start end command)
  "Run shell-command-on-region interactivly replacing the region in place"
  (interactive (let (string) 
    	 (unless (mark)
    	   (error "The mark is not set now, so there is no region"))
    	 ;; Do this before calling region-beginning
    	 ;; and region-end, in case subprocess output
    	 ;; relocates them while we are in the minibuffer.
    	 ;; call-interactively recognizes region-beginning and
    	 ;; region-end specially, leaving them in the history.
    	 (setq string (read-from-minibuffer "Shell command on region: "
    					    nil nil nil
    					    'shell-command-history))
    	 (list (region-beginning) (region-end)
    	       string)))
  (shell-command-on-region start end command t t))


(require 'evil)

;; cua does not work for {, neither [, i thouht was skeleton-pair but it fails even when it is null.
(defun cua-mode-in ()
  (interactive)
  (setq skeleton-pair nil)
  (cua-mode 1))

(defun cua-mode-out ()
  (interactive)
  (setq skeleton-pair t)
  (cua-mode -1))

(defun custom-hide-block()
  (interactive)
  (hs-minor-mode 1)
  (setq region (show-paren--default))
  (hs-hide-block-at-point (nth 3 region) (list (nth 1 region) (nth 2 region))))



(global-set-key (kbd "C-c h b") 'custom-hide-block)

;; this key binding doesn't work
(global-set-key (kbd "C-c h s") 'hs-show-block)

(server-start)

(load "dash")
(put 'downcase-region 'disabled nil)
